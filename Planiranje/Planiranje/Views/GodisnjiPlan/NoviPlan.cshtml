@model Planiranje.Models.GodisnjiModel

@{
	Page.Title = ViewBag.Title;
	Layout = Request.IsAjaxRequest() ? null : "~/Views/Shared/_Layout.cshtml";
	int i = 0;
}

@Html.Raw(TempData["alert"])

<div class="inner">
	<div class="row">
		<div class="col-lg-12">
			<h3> @ViewBag.Title </h3>
		</div>
	</div>
	<div class="row">
		<div class="col-lg-12">
			<div class="panel panel-default">
				<div class="panel-body">
					@using (Html.BeginForm(null, null, new { @id = string.Empty }, FormMethod.Post, new { @id = "noviGodPlanView", @class = "form-horizontal", role = "form" }))
					{
						<div class="modal-body">
							@Html.ValidationSummary(true, "", new { @class = "text-danger" })
							@Html.HiddenFor(model => model.GodisnjiPlan.Id_god, new { Value = 0 })
							<div class="form-group">
								@Html.LabelFor(model => model.GodisnjiPlan.Ak_godina, htmlAttributes: new { @class = "control-label col-md-2" })
								<div class="col-md-10">
									@Html.EditorFor(model => model.GodisnjiPlan.Ak_godina, new { htmlAttributes = new { @class = "form-control" } })
									@Html.ValidationMessageFor(model => model.GodisnjiPlan.Ak_godina, "", new { @class = "text-danger" })
								</div>
							</div>
						</div>
					<hr>
					<div id="exTab2" class="">
						<ul class="nav nav-tabs">
							@foreach(var mjesec in ViewBag.Mjeseci)
							{
								if (i == 0)
								{
									@:<li class="active">
								}
								else
								{
									@:<li>
								}
									<a href="#@(++i)" data-toggle="tab">@mjesec.Value</a>
								@:</li>
							}
						</ul>
						<div class="tab-content ">
							@{
								i = 0;
							}
							@foreach(var mjesec in ViewBag.Mjeseci)
							{
								if (i == 0)
								{
									@:<div class="tab-pane active" id="@(i+1)">
								}
								else
								{
									@:<div class="tab-pane" id="@(i+1)">
								}
								<div class="row">
									@Html.HiddenFor(model => model.GodisnjiDetalji[i].Naziv_mjeseca, new { @Value = mjesec.Value })
									@Html.HiddenFor(model => model.GodisnjiDetalji[i].Mjesec, new { @Value = mjesec.Key })
									@Html.ValidationSummary(true, "", new { @class = "text-danger" })
									<div class="form-group">
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Radnih_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Radnih_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
											</div>
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Subota_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Subota_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
											</div>
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Nedjelja_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Nedjelja_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
											</div>
										</div>
									</div>
								<div class="row">
									<div class="form-group">
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Blagdana_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Blagdana_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
											</div>
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Nastavnih_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Nastavnih_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
										</div>
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Praznika_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Praznika_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
										</div>
										</div>
									</div>
								<div class="row">
									<div class="form-group">
										@Html.LabelFor(model => model.GodisnjiDetalji[i].Odmor_dana, htmlAttributes: new { @class = "control-label col-md-2" })
										<div class="col-md-2">
											@Html.EditorFor(model => model.GodisnjiDetalji[i].Odmor_dana, new { htmlAttributes = new { @class = "form-control", onkeydown = "return ValidateNumber(event);" } })
										</div>
									</div>
								</div>
							@:</div>
							i++;
							}
						</div>
					</div>
					<div class="modal-footer">
						<input type="button" class="btn btn-default" value="Odustani" onclick='cancelNewPlan("@Url.Action("Index", "GodisnjiPlan")")' />
						<input type="button" class="btn btn-primary" value="Spremi" id="spremiNoviGodPlan" />
					</div>
					}
					</div><!--exTab2-->
				</div>
			</div>
		</div>
	</div>
</div>
<script>
	$(document).ready(function () {
		$('#spremiNoviGodPlan').click(function () {
			var data = $('#noviGodPlanView').serialize();
			$.ajax({
				url: "/GodisnjiPlan/NoviPlan",
				type: "POST",
				data: data,
				success: function (data) {
					$("#content").html(data);
				},
				error: function (request, status, error) {
					console.log(request.responseText);
				}
			});
		});
	});
</script>

<script>
	function cancelNewPlan(url) {
		$.ajax({
			url: url,
			success: function (data) {
				$('#content').html(data);
			},
			error: function (xhr, ajaxOptions, thrownError) { alert(xhr.responseText); }
		});
	}
</script>
<script>
	var rowDelete;
	$(document).ready(function () {
		$("#btnCreateAsset").click(function (e) {
			var url = $(this).attr("data-url");
			$.ajax({
				url: url,
				success: function (data) {
					$('#assetContainer').html(data);
					$('#assetModal').modal('show');
				},
				error: function (xhr, ajaxOptions, thrownError) { alert(xhr.responseText); }
			});
		});

		$('#dataTables-example').on("click", "#editAsset", function (event) {
			event.preventDefault();
			var url = $(this).attr("data-url");
			$.get(url, function (data) {
				$('#assetContainer').html(data);
				$('#assetModal').modal('show');
			});
		});

		$('#dataTables-example').on("click", "#deleteAsset", function (event) {
			event.preventDefault();
			var url = $(this).attr("data-url");
			$.get(url, function (data) {
				$('#assetContainer').html(data);
				$('#assetModal').modal('show');
			});
		});

		$('#dataTables-example').on("click", "#detailsAsset", function (event) {
			event.preventDefault();
			var url = $(this).attr("data-url");
			$.get(url, function (data) {
				$('#assetContainer').html(data);
				$('#assetModal').modal('show');
			});
		});
	});
</script>

<script type="text/javascript">
	function CreateSuccess() {
		$('#assetModal').modal('hide');
		$('#assetContainer').html("");
		location.reload(true);
	}

	function EditSuccess() {
		$('#assetModal').modal('hide');
		$('#assetContainer').html("");
		location.reload(true);
	}

	function DeleteSuccess() {
		location.reload(true);
	}

	function DetailsSuccess() {
		$('#assetModal').modal('hide');
		$('#assetContainer').html("");
		location.reload(true);
	}
</script>


<script type="text/javascript">
	function ValidateNumber(e) {
		var evt = (e) ? e : window.event;
		var charCode = (evt.keyCode) ? evt.keyCode : evt.which;
		if (charCode > 31 && (charCode < 48 || charCode > 57)) {
			return false;
		}
		return true;
	};
</script>
